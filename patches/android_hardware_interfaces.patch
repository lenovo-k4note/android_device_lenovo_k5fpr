From c7a92403bc12b77b75613ce5a982c3fa9bc09413 Mon Sep 17 00:00:00 2001
From: Rokib Hasan Sagar <rokibhasansagar2014@outlook.com>
Date: Fri, 8 Feb 2019 07:45:57 +0600
Subject: * Update CameraDevice.cpp
---
 camera/device/1.0/default/CameraDevice.cpp | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/camera/device/1.0/default/CameraDevice.cpp b/camera/device/1.0/default/CameraDevice.cpp
index 116963b9566190fc7159c825379c6cba4af1af4b..341071868cb088210b5486cd9291e6e2f3f18e8d 100644
--- a/camera/device/1.0/default/CameraDevice.cpp
+++ b/camera/device/1.0/default/CameraDevice.cpp
@@ -35,6 +35,7 @@ using ::android::hardware::graphics::common::V1_0::BufferUsage;
 using ::android::hardware::graphics::common::V1_0::PixelFormat;
 
 HandleImporter CameraDevice::sHandleImporter;
+CameraDevice* sUser = nullptr;
 
 Status CameraDevice::getHidlStatus(const int& status) {
     switch (status) {
@@ -44,6 +45,7 @@ Status CameraDevice::getHidlStatus(const int& status) {
         case -EUSERS: return Status::MAX_CAMERAS_IN_USE;
         case -ENODEV: return Status::INTERNAL_ERROR;
         case -EINVAL: return Status::ILLEGAL_ARGUMENT;
+        case -EPIPE : return Status::INTERNAL_ERROR;
         default:
             ALOGE("%s: unknown HAL status code %d", __FUNCTION__, status);
             return Status::INTERNAL_ERROR;
@@ -360,8 +362,11 @@ CameraDevice::CameraHeapMemory::~CameraHeapMemory() {
 
 // shared memory methods
 camera_memory_t* CameraDevice::sGetMemory(int fd, size_t buf_size, uint_t num_bufs, void *user) {
+    if (user == nullptr) {
+	    ALOGW("%s: user is empty. This seems normal for mtk camera! Using the saved one", __FUNCTION__);
+    }
     ALOGV("%s", __FUNCTION__);
-    CameraDevice* object = static_cast<CameraDevice*>(user);
+    CameraDevice* object = (user == nullptr)? sUser : static_cast<CameraDevice*>(user);
     if (object->mDeviceCallback == nullptr) {
         ALOGE("%s: camera HAL request memory while camera is not opened!", __FUNCTION__);
         return nullptr;
@@ -715,8 +720,10 @@ Return<Status> CameraDevice::open(const sp<ICameraDeviceCallback>& callback) {
         ALOGI("could not cast ICameraDeviceCallback to IQCameraDeviceCallback");
     }
 #endif
 
     if (mDevice->ops->set_callbacks) {
+        ALOGV("%s: Saving camera device for sGetMemory", __FUNCTION__);
+        sUser = this;
         mDevice->ops->set_callbacks(mDevice,
                 sNotifyCb, sDataCb, sDataCbTimestamp, sGetMemory, this);
     }
-- 
2.20.1

